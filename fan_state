#!/usr/bin/env bash

check_root() {
    if [ "$EUID" -ne 0 ]; then
        echo "Error: This script must be run as root. Please use 'sudo $0 $*' or run as root user."
        exit 1
    fi
}

get_reg_no() {
    local model
    model=$(cat /sys/class/dmi/id/product_name 2>/dev/null | tr -d '\n' | xargs)
    if [[ $model =~ Vivobook\ S\ 15\ S5506 ]]; then
        echo "0x5002f"
    elif [[ $model =~ Zenbook\ S\ 16\ UM5606 ]] || [[ $model =~ Vivobook\ M5606 ]] || [[ $model =~ Zenbook\ S\ 14\ UX5406SA ]]; then
        echo "0x110019"
    else
        echo "0x110019"
    fi
}

set_fan_state() {
    check_root
    
    local state_value

    case $1 in
        0|standard)
            state_value=0
            ;;
        1|quiet)
            state_value=1
            ;;
        2|high)
            state_value=2
            ;;
        3|full)
            state_value=3
            ;;
        *)
            echo "Error: Invalid fan state. Use 0-3 or standard/quiet/high/full."
            exit 1
            ;;
    esac

    echo "Setting fan state to $state_value"
    cd /sys/kernel/debug/asus-nb-wmi
    echo $(get_reg_no) > dev_id
    echo $state_value > ctrl_param
    cat devs
}

get_fan_state() {
    check_root
    
    cd /sys/kernel/debug/asus-nb-wmi
    echo $(get_reg_no) > dev_id
    state=$(cat ctrl_param)
    
    case $state in
        0x00000000)
            echo "Current fan state: Standard (0)"
            ;;
        0x00000001)
            echo "Current fan state: Quiet (1)"
            ;;
        0x00000002)
            echo "Current fan state: High-Performance (2)"
            ;;
        0x00000003)
            echo "Current fan state: Full-Performance (3)"
            ;;
        *)
            echo "Current fan state: Unknown ($state)"
            ;;
    esac
}

if [ $# -eq 0 ]; then
    echo "Usage: fan_state [set <0-3|standard|quiet|high|full>|get]"
    exit 1
fi

case $1 in
    set)
        if [ $# -ne 2 ]; then
            echo "Error: 'set' command requires an argument (0-3 or standard/quiet/high/full)."
            exit 1
        fi
        set_fan_state $2
        ;;
    get)
        get_fan_state
        ;;
    *)
        echo "Error: Invalid command. Use 'set <0-3|standard|quiet|high|full>' or 'get'."
        exit 1
        ;;
esac

exit
